package model

import java.util.Arrays

/**
 * Этот класс описывает игровой мир. Содержит также описания всех игроков и игровых объектов (<<юнитов>>).
 * @param tickIndex Возвращает номер текущего тика.
 * @param tickCount Возвращает базовую длительность игры в тиках. Реальная длительность может отличаться от этого значения в
 *                  меньшую сторону. Эквивалентно {@code game.tickCount}.
 * @param width Возвращает ширину мира.
 * @param height Возвращает высоту мира.
 * @param players Возвращает список игроков (в случайном порядке).
 *                После каждого тика объекты, задающие игроков, пересоздаются.
 * @param wizards Возвращает список видимых волшебников (в случайном порядке).
 *                После каждого тика объекты, задающие волшебников, пересоздаются.
 * @param minions Возвращает список видимых последователей (в случайном порядке).
 *                После каждого тика объекты, задающие последователей, пересоздаются.
 * @param projectiles Возвращает список видимых магических снарядов (в случайном порядке).
 *                    После каждого тика объекты, задающие снаряды, пересоздаются.
 * @param bonuses Возвращает список видимых бонусов (в случайном порядке).
 *                После каждого тика объекты, задающие бонусы, пересоздаются.
 * @param buildings Возвращает список видимых строений (в случайном порядке).
 *                  После каждого тика объекты, задающие строения, пересоздаются.
 * @param trees Возвращает список видимых деревьев (в случайном порядке).
 *              После каждого тика объекты, задающие деревья, пересоздаются.
 */
class World (val tickIndex: Int,
             val tickCount: Int,
             val width: Double,
             val height: Double,
             val players: Array[Player],
             val wizards: Array[Wizard],
             val minions: Array[Minion],
             val projectiles: Array[Projectile],
             val bonuses: Array[Bonus],
             val buildings: Array[Building],
             val trees: Array[Tree]) {

    /**
     * @return Возвращает вашего игрока.
     */
    def myPlayer = {
        players.find(_.isMe)
    }
}
